{"ast":null,"code":"var _jsxFileName = \"/Users/bruno/React/monsters-rolodex/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchField, setSearchField] = useState(''); //[value, setValue]\n\n  const [title, setTitle] = useState('');\n  const [monsters, setMonsters] = useState([]); //[value, setValue]\n\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  console.log('rendered');\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setMonsters(users));\n  }, []);\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]); //console.log(searchField);\n\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  const onTitleChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setTitle(searchFieldString);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChange: onSearchChange,\n      placeoholder: \"Search monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"title-search-box\",\n      onChange: onTitleChange,\n      placeoholder: \"Set title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n/*\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n\n        // console.log('1 - constructor');\n    }\n\n    componentDidMount() {\n\n        //console.log('3 - componentDidMount');\n\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then((users) => this.setState(() => {\n                return {monsters: users}\n            }, () => {\n                //console.log(this.state);\n            }))\n\n    }\n\n    onSearchChange = (event) => {\n        const searchField = event.target.value.toLocaleLowerCase();\n        this.setState(() => {\n            return {searchField}\n        });\n    }\n\n    render() {\n\n        // console.log('2 - render');\n\n        const {monsters, searchField} = this.state;\n        const {onSearchChange} = this;\n\n        const filteredMonsters = monsters.filter((monster) => {\n            return monster.name.toLocaleLowerCase().includes(searchField);\n        });\n\n        return (\n\n            <div className=\"App\">\n\n            <h1 className='app-title'>Monsters Rolodex</h1>\n                <SearchBox\n                    className='monsters-search-box'\n                    onChange={onSearchChange}\n                    placeoholder='Search monsters'\n                />\n\n                <CardList monsters={filteredMonsters}/>\n\n            </div>\n        );\n    }\n}\n*/\n\n\n_s(App, \"DWgWxnDdKBAhfMehNln1Q6itmSY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","App","searchField","setSearchField","title","setTitle","monsters","setMonsters","filteredMonsters","setFilteredMonsters","console","log","fetch","then","response","json","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value","onTitleChange"],"sources":["/Users/bruno/React/monsters-rolodex/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nconst App = () => {\n\n    const [searchField, setSearchField] = useState(''); //[value, setValue]\n    const [title, setTitle] = useState('');\n    const [monsters, setMonsters] = useState([]); //[value, setValue]\n    const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n    console.log('rendered');\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then((users) => setMonsters(users)\n            );\n    }, []);\n\n    useEffect(() => {\n        const newFilteredMonsters = monsters.filter((monster) => {\n            return monster.name.toLocaleLowerCase().includes(searchField);\n        });\n\n        setFilteredMonsters(newFilteredMonsters);\n\n    }, [monsters, searchField]);\n\n    //console.log(searchField);\n\n    const onSearchChange = (event) => {\n        const searchFieldString = event.target.value.toLocaleLowerCase();\n        setSearchField(searchFieldString);\n    }\n\n    const onTitleChange = (event) => {\n        const searchFieldString = event.target.value.toLocaleLowerCase();\n        setTitle(searchFieldString);\n    }\n\n    return (\n\n        <div className=\"App\">\n\n            <h1 className='app-title'>{title}</h1>\n            <SearchBox\n                className='monsters-search-box'\n                onChange={onSearchChange}\n                placeoholder='Search monsters'\n            />\n\n            <br/>\n            <SearchBox\n                className='title-search-box'\n                onChange={onTitleChange}\n                placeoholder='Set title'\n            />\n\n\n            <CardList monsters={filteredMonsters}/>\n\n        </div>);\n\n}\n\n/*\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n\n        // console.log('1 - constructor');\n    }\n\n    componentDidMount() {\n\n        //console.log('3 - componentDidMount');\n\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then((users) => this.setState(() => {\n                return {monsters: users}\n            }, () => {\n                //console.log(this.state);\n            }))\n\n    }\n\n    onSearchChange = (event) => {\n        const searchField = event.target.value.toLocaleLowerCase();\n        this.setState(() => {\n            return {searchField}\n        });\n    }\n\n    render() {\n\n        // console.log('2 - render');\n\n        const {monsters, searchField} = this.state;\n        const {onSearchChange} = this;\n\n        const filteredMonsters = monsters.filter((monster) => {\n            return monster.name.toLocaleLowerCase().includes(searchField);\n        });\n\n        return (\n\n            <div className=\"App\">\n\n            <h1 className='app-title'>Monsters Rolodex</h1>\n                <SearchBox\n                    className='monsters-search-box'\n                    onChange={onSearchChange}\n                    placeoholder='Search monsters'\n                />\n\n                <CardList monsters={filteredMonsters}/>\n\n            </div>\n        );\n    }\n}\n*/\n\nexport default App;\n"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEd,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CAFc,CAEsC;;EACpD,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC,CAJc,CAIgC;;EAC9C,MAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAACS,QAAD,CAAxD;EAEAI,OAAO,CAACC,GAAR,CAAY,UAAZ;EAEAb,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,KAAD,IAAWT,WAAW,CAACS,KAAD,CAFhC;EAIH,CALQ,EAKN,EALM,CAAT;EAOAlB,SAAS,CAAC,MAAM;IACZ,MAAMmB,mBAAmB,GAAGX,QAAQ,CAACY,MAAT,CAAiBC,OAAD,IAAa;MACrD,OAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0CpB,WAA1C,CAAP;IACH,CAF2B,CAA5B;IAIAO,mBAAmB,CAACQ,mBAAD,CAAnB;EAEH,CAPQ,EAON,CAACX,QAAD,EAAWJ,WAAX,CAPM,CAAT,CAhBc,CAyBd;;EAEA,MAAMqB,cAAc,GAAIC,KAAD,IAAW;IAC9B,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,iBAAnB,EAA1B;IACAlB,cAAc,CAACsB,iBAAD,CAAd;EACH,CAHD;;EAKA,MAAMG,aAAa,GAAIJ,KAAD,IAAW;IAC7B,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,iBAAnB,EAA1B;IACAhB,QAAQ,CAACoB,iBAAD,CAAR;EACH,CAHD;;EAKA,oBAEI;IAAK,SAAS,EAAC,KAAf;IAAA,wBAEI;MAAI,SAAS,EAAC,WAAd;MAAA,UAA2BrB;IAA3B;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,SAAD;MACI,SAAS,EAAC,qBADd;MAEI,QAAQ,EAAEmB,cAFd;MAGI,YAAY,EAAC;IAHjB;MAAA;MAAA;MAAA;IAAA,QAHJ,eASI;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI,QAAC,SAAD;MACI,SAAS,EAAC,kBADd;MAEI,QAAQ,EAAEK,aAFd;MAGI,YAAY,EAAC;IAHjB;MAAA;MAAA;MAAA;IAAA,QAVJ,eAiBI,QAAC,QAAD;MAAU,QAAQ,EAAEpB;IAApB;MAAA;MAAA;MAAA;IAAA,QAjBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAuBH,CA5DD;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA7HMP,G;;KAAAA,G;AA+HN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}